#version 450

// On OpenGL backends, the thread group size is specified here in the compute shader.
// On non-OpenGL backends, the thread group size is specified in Veldrid's compute pipeline description.
// For consistent results, the size should match between here and GLRenderer/VeldridRenderer.compute_mipmap_threads.
layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0, rgba8) uniform readonly image2D samplingTexture;
layout(set = 0, binding = 1, rgba8) uniform writeonly image2D targetTexture;

void main(void)
{
    vec4 colour =
        (imageLoad(samplingTexture, ivec2(gl_GlobalInvocationID.xy * 2 + uvec2(0, 0))) +
         imageLoad(samplingTexture, ivec2(gl_GlobalInvocationID.xy * 2 + uvec2(0, 1))) +
         imageLoad(samplingTexture, ivec2(gl_GlobalInvocationID.xy * 2 + uvec2(1, 0))) +
         imageLoad(samplingTexture, ivec2(gl_GlobalInvocationID.xy * 2 + uvec2(1, 1)))) / 4;

    imageStore(targetTexture, ivec2(gl_GlobalInvocationID.xy), colour);
}